<Type Name="Documents" FullName="Microsoft.Office.Interop.Word.Documents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26a223b933ad8e65e358a7ee5f70750013973d8d" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43924336" /></Metadata><TypeSignature Language="C#" Value="public interface Documents : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Documents implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Documents" />
  <TypeSignature Language="VB.NET" Value="Public Interface Documents&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Documents : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Documents = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002096C-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Colección de todos los <see cref="T:Microsoft.Office.Interop.Word.Document" /> objetos que están actualmente abiertos en Word.</summary>
    <remarks><para>Utilice la <see cref="P:Microsoft.Office.Interop.Word._Application.Documents" /> propiedad para devolver la colección <b>Documents</b> .</para>
      <para>Utilice el <see cref="M:Microsoft.Office.Interop.Word.Documents.Add(System.Object@,System.Object@,System.Object@,System.Object@)" /> método para crear un nuevo documento vacío y agregarlo a la colección <b>Documents</b> .</para>
      <para>Utilice el método <b>Open</b> para abrir un archivo.</para>
      <para>Use <b>Documents</b>( <paramref name="index" /> ), donde <paramref name="index" /> es el nombre del documento o el número de índice, para devolver un único objeto <b>Document</b> .</para>
      <para>El número de índice representa la posición del documento en la colección <b>Documents</b>.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Add (ref object Template, ref object NewTemplate, ref object DocumentType, ref object Visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Add([in]object&amp; Template, [in]object&amp; NewTemplate, [in]object&amp; DocumentType, [in]object&amp; Visible) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Add(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional ByRef Template As Object, Optional ByRef NewTemplate As Object, Optional ByRef DocumentType As Object, Optional ByRef Visible As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.Add (Template, NewTemplate, DocumentType, Visible)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" RefType="ref" />
        <Parameter Name="NewTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="DocumentType" Type="System.Object" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Template"><b>Objeto</b>opcional. El nombre de la plantilla que se usará para el documento nuevo. Si se omite este argumento, se usará la plantilla Normal.</param>
        <param name="NewTemplate"><b>Objeto</b>opcional. <b>True</b> para abrir el documento como plantilla. El valor predeterminado es <b>False</b>.</param>
        <param name="DocumentType"><b>Objeto</b>opcional. Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Word.WdNewDocumentType" /> constantes: <b>wdNewBlankDocument</b>, <b>WdNewEmailMessage</b>, <b>wdNewFrameset</b>o <b>wdNewWebPage</b>. La constante predeterminada es <b>wdNewBlankDocument</b>.</param>
        <param name="Visible"><b>Objeto</b>opcional. <b>True</b> para abrir el documento en una ventana visible. Si este valor es <b>false</b>, Microsoft Word abre el documento pero establece la <see cref="P:Microsoft.Office.Interop.Word.Window.Visible" /> propiedad de la ventana de documento en <b>false</b>. El valor predeterminado es <b>True</b>.</param>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Word.Document" /> objeto Object que representa un documento nuevo y vacío agregado a la colección de documentos abiertos.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBlogDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document AddBlogDocument (string ProviderID, string PostURL, string BlogName, string PostID = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document AddBlogDocument([in]string ProviderID, [in]string PostURL, [in]string BlogName, [in]string PostID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.AddBlogDocument(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBlogDocument (ProviderID As String, PostURL As String, BlogName As String, Optional PostID As String = &quot;&quot;) As Document" />
      <MemberSignature Language="F#" Value="abstract member AddBlogDocument : string * string * string * string -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.AddBlogDocument (ProviderID, PostURL, BlogName, PostID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProviderID" Type="System.String" />
        <Parameter Name="PostURL" Type="System.String" />
        <Parameter Name="BlogName" Type="System.String" />
        <Parameter Name="PostID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProviderID">GUID que es el único valor que usa el proveedor al registrarse con Word.</param>
        <param name="PostURL">Dirección URL utilizada para agregar las entradas de blog.</param>
        <param name="BlogName">Nombre para mostrar del blog que se usará en Word.</param>
        <param name="PostID">El identificador de una entrada existente con la que se va a rellenar el documento creado mediante el método <b>AddBlogDocument</b>.</param>
        <summary>Devuelve un objeto que representa un nuevo documento de blog que publica Microsoft Office Word en la cuenta descrita por los tres primeros parámetros.</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Word._Document" /></returns>
        <remarks><para>Este método crea un nuevo documento y también registra la cuenta de blog especificada con Word si ya no está registrado. Además, si <paramref name="PostID" /> se especifica el parámetro, el nuevo documento se rellena con el contenido de la publicación especificada por el valor del <paramref name="PostID" /> parámetro, desde el sitio web del proveedor.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document AddOld (ref object Template, ref object NewTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document AddOld([in]object&amp; Template, [in]object&amp; NewTemplate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.AddOld(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOld (Optional ByRef Template As Object, Optional ByRef NewTemplate As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member AddOld : obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.AddOld (Template, NewTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" RefType="ref" />
        <Parameter Name="NewTemplate" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Template">To be added.</param>
        <param name="NewTemplate">To be added.</param>
        <summary>Reservado para uso interno.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.Documents.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Word.Application" /> objeto que representa la aplicación Microsoft Word.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (FileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ FileName);" />
      <MemberSignature Language="F#" Value="abstract member CanCheckOut : string -&gt; bool" Usage="documents.CanCheckOut FileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FileName"><b>String</b> requerida. Ruta de acceso al servidor y el nombre del documento.</param>
        <summary>Determina si Microsoft Word puede desproteger un documento especificado de un servidor. <b>Boolean</b> de lectura y escritura.</summary>
        <returns>To be added.</returns>
        <remarks><para>Este método devuelve <b>true</b> si Microsoft Word puede desproteger un documento especificado de un servidor y <b>false</b> en caso contrario.</para>
          <para>Para beneficiarse de las funciones de colaboración integradas en Word, los documentos deben almacenarse en Microsoft SharePoint Portal Server.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (FileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ FileName);" />
      <MemberSignature Language="F#" Value="abstract member CheckOut : string -&gt; unit" Usage="documents.CheckOut FileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FileName"><b>String</b> requerida. Nombre del archivo que se va a desproteger.</param>
        <summary>Copia un documento específico desde un servidor a un equipo local para modificarlo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (ref object SaveChanges, ref object OriginalFormat, ref object RouteDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object&amp; SaveChanges, [in]object&amp; OriginalFormat, [in]object&amp; RouteDocument) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Close(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional ByRef SaveChanges As Object, Optional ByRef OriginalFormat As Object, Optional ByRef RouteDocument As Object)" />
      <MemberSignature Language="F#" Value="abstract member Close : obj * obj * obj -&gt; unit" Usage="documents.Close (SaveChanges, OriginalFormat, RouteDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" RefType="ref" />
        <Parameter Name="OriginalFormat" Type="System.Object" RefType="ref" />
        <Parameter Name="RouteDocument" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><b>Objeto</b>opcional. Especifica la operación de guardar la acción para el documento. Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Word.WdSaveOptions" /> constantes: <b>wdDoNotSaveChanges</b>, <b>wdPromptToSaveChanges</b>o <b>wdSaveChanges</b>.</param>
        <param name="OriginalFormat"><b>Objeto</b>opcional. Especifica la operación de guardar formato para el documento. Puede ser una de las siguientes <see cref="T:Microsoft.Office.Interop.Word.WdOriginalFormat" /> constantes: <b>wdOriginalDocumentFormat</b>, <b>wdPromptUser</b>o <b>wdWordDocument</b>.</param>
        <param name="RouteDocument"><b>Objeto</b>opcional. <b>True</b> para distribuir el documento al siguiente destinatario. Si el documento no tiene una lista de distribución adjunta, se omite este argumento.</param>
        <summary>Cierra el documento o documentos especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Interop.Word.Documents.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el número de elementos de la colección especificada.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.Documents.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto especificado.</summary>
        <value>To be added.</value>
        <remarks><para>Si el objeto especificado se creó en Microsoft Word, esta propiedad devuelve el número hexadecimal 4D535744, que representa la cadena "MSWD". [!NOTA] Este valor también puede representarse mediante la constante <b>wdCreatorCode</b>.</para>
          <para>La propiedad <b>Creator</b> se diseñó principalmente para usarse en Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Word tiene el código de creador MSWD. Para obtener información adicional acerca de esta propiedad, vea la referencia del lenguaje Ayuda incluida con Microsoft Office Macintosh Edition.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="documents.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As Document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Document ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::Document ^ get(System::Object ^ % Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Microsoft.Office.Interop.Word.Document" Usage="Microsoft.Office.Interop.Word.Documents.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Objeto</b> que indica la posición ordinal o una cadena que representa el nombre del objeto individual.</param>
        <summary>Devuelve un objeto individual de una colección.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Open (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible, ref object OpenAndRepair, ref object DocumentDirection, ref object NoEncodingDialog, ref object XMLTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Open([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible, [in]object&amp; OpenAndRepair, [in]object&amp; DocumentDirection, [in]object&amp; NoEncodingDialog, [in]object&amp; XMLTransform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Open(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object, Optional ByRef OpenAndRepair As Object, Optional ByRef DocumentDirection As Object, Optional ByRef NoEncodingDialog As Object, Optional ByRef XMLTransform As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member Open : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.Open (FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible, OpenAndRepair, DocumentDirection, NoEncodingDialog, XMLTransform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object" RefType="ref" />
        <Parameter Name="OpenAndRepair" Type="System.Object" RefType="ref" />
        <Parameter Name="DocumentDirection" Type="System.Object" RefType="ref" />
        <Parameter Name="NoEncodingDialog" Type="System.Object" RefType="ref" />
        <Parameter Name="XMLTransform" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName"><b>Objeto</b>requerido. Nombre del documento (se aceptan rutas de acceso).</param>
        <param name="ConfirmConversions"><b>Objeto</b>opcional. <b>True</b> para mostrar el cuadro de diálogo Convertir archivo si el archivo no está en formato de Microsoft Word.</param>
        <param name="ReadOnly"><b>Objeto</b>opcional. <b>True</b> para abrir el documento como de sólo lectura. <b>Nota:</b>   Este argumento no reemplaza la configuración recomendada por sólo lectura en un documento guardado. Por ejemplo, si se ha guardado un documento con la opción recomendado sólo lectura activada, la configuración del argumento <b>ReadOnly</b> en <b>false</b> no hará que el archivo se abra como de lectura y escritura.</param>
        <param name="AddToRecentFiles"><b>Objeto</b>opcional. <b>True</b> para agregar el nombre de archivo a la lista de archivos usados recientemente en la parte inferior del menú Archivo.</param>
        <param name="PasswordDocument"><b>Objeto</b>opcional. Contraseña para poder abrir el documento.</param>
        <param name="PasswordTemplate"><b>Objeto</b>opcional. Contraseña para poder abrir la plantilla.</param>
        <param name="Revert"><b>Objeto</b>opcional. Controla lo que ocurre si <paramref name="FileName" /> es el nombre de un documento abierto. <b>True</b> para descartar cualquier cambio no guardado del documento abierto y volver a abrir el archivo.  <b>False</b> para activar el documento abierto.</param>
        <param name="WritePasswordDocument"><b>Objeto</b>opcional. Contraseña para guardar los cambios del documento.</param>
        <param name="WritePasswordTemplate"><b>Objeto</b>opcional. Contraseña para guardar los cambios de la plantilla.</param>
        <param name="Format"><b>Objeto</b>opcional. Convertidor de archivos que se usará para abrir el documento. Puede ser una <see cref="T:Microsoft.Office.Interop.Word.WdOpenFormat" /> constante. Para especificar un formato de archivo externo, aplique la <see cref="P:Microsoft.Office.Interop.Word.FileConverter.OpenFormat" /> propiedad a un <see cref="T:Microsoft.Office.Interop.Word.FileConverter" /> objeto para determinar el valor que se va a usar con este argumento.</param>
        <param name="Encoding"><b>Objeto</b>opcional. Codificación de documentos (página de códigos o juego de caracteres) que debe usar Microsoft Word para mostrar el documento guardado. Puede ser cualquier <see cref="T:Microsoft.Office.Core.MsoEncoding" /> constante válida. El valor predeterminado es la página de códigos del sistema.</param>
        <param name="Visible"><b>Objeto</b>opcional. <b>True</b> si el documento se abre en una ventana visible. El valor predeterminado es <b>True</b>.</param>
        <param name="OpenAndRepair"><b>Objeto</b>opcional. <b>True</b> para reparar el documento para evitar daños en los documentos.</param>
        <param name="DocumentDirection"><b>Objeto opcional.</b> Puede ser una <see cref="T:Microsoft.Office.Interop.Word.WdDocumentDirection" /> constante.</param>
        <param name="NoEncodingDialog"><b>Objeto</b>opcional. <b>True</b> para no mostrar el cuadro de diálogo Codificación que abre Word cuando no reconoce el texto. El valor predeterminado es <b>False</b>.</param>
        <param name="XMLTransform"><b>Objeto</b>opcional. Especifica qué transformación usar.</param>
        <summary>Abre el documento especificado y lo agrega a la <see cref="T:Microsoft.Office.Interop.Word.Documents" /> colección.</summary>
        <returns>To be added.</returns>
        <remarks><para>Evite usar contraseñas dentro del código en sus aplicaciones. Si se requiere una contraseña en un procedimiento, solicítesela al usuario, almacénela en una variable y utilice la variable en el código.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Open2000">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Open2000 (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Open2000([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Open2000(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open2000 (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member Open2000 : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.Open2000 (FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">To be added.</param>
        <param name="ConfirmConversions">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="AddToRecentFiles">To be added.</param>
        <param name="PasswordDocument">To be added.</param>
        <param name="PasswordTemplate">To be added.</param>
        <param name="Revert">To be added.</param>
        <param name="WritePasswordDocument">To be added.</param>
        <param name="WritePasswordTemplate">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Encoding">To be added.</param>
        <param name="Visible">To be added.</param>
        <summary>Reservado para uso interno. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open2002">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Open2002 (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible, ref object OpenAndRepair, ref object DocumentDirection, ref object NoEncodingDialog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document Open2002([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible, [in]object&amp; OpenAndRepair, [in]object&amp; DocumentDirection, [in]object&amp; NoEncodingDialog) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Open2002(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open2002 (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object, Optional ByRef OpenAndRepair As Object, Optional ByRef DocumentDirection As Object, Optional ByRef NoEncodingDialog As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member Open2002 : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.Open2002 (FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible, OpenAndRepair, DocumentDirection, NoEncodingDialog)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object" RefType="ref" />
        <Parameter Name="OpenAndRepair" Type="System.Object" RefType="ref" />
        <Parameter Name="DocumentDirection" Type="System.Object" RefType="ref" />
        <Parameter Name="NoEncodingDialog" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">To be added.</param>
        <param name="ConfirmConversions">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="AddToRecentFiles">To be added.</param>
        <param name="PasswordDocument">To be added.</param>
        <param name="PasswordTemplate">To be added.</param>
        <param name="Revert">To be added.</param>
        <param name="WritePasswordDocument">To be added.</param>
        <param name="WritePasswordTemplate">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Encoding">To be added.</param>
        <param name="Visible">To be added.</param>
        <param name="OpenAndRepair">To be added.</param>
        <param name="DocumentDirection">To be added.</param>
        <param name="NoEncodingDialog">To be added.</param>
        <summary>Reservado para uso interno.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNoRepairDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document OpenNoRepairDialog (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format, ref object Encoding, ref object Visible, ref object OpenAndRepair, ref object DocumentDirection, ref object NoEncodingDialog, ref object XMLTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document OpenNoRepairDialog([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format, [in]object&amp; Encoding, [in]object&amp; Visible, [in]object&amp; OpenAndRepair, [in]object&amp; DocumentDirection, [in]object&amp; NoEncodingDialog, [in]object&amp; XMLTransform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.OpenNoRepairDialog(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNoRepairDialog (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object, Optional ByRef Encoding As Object, Optional ByRef Visible As Object, Optional ByRef OpenAndRepair As Object, Optional ByRef DocumentDirection As Object, Optional ByRef NoEncodingDialog As Object, Optional ByRef XMLTransform As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member OpenNoRepairDialog : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.OpenNoRepairDialog (FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible, OpenAndRepair, DocumentDirection, NoEncodingDialog, XMLTransform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="Encoding" Type="System.Object" RefType="ref" />
        <Parameter Name="Visible" Type="System.Object" RefType="ref" />
        <Parameter Name="OpenAndRepair" Type="System.Object" RefType="ref" />
        <Parameter Name="DocumentDirection" Type="System.Object" RefType="ref" />
        <Parameter Name="NoEncodingDialog" Type="System.Object" RefType="ref" />
        <Parameter Name="XMLTransform" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">Nombre del documento (se aceptan rutas de acceso).</param>
        <param name="ConfirmConversions"><b>True</b> para mostrar el cuadro de diálogo Convertir archivo si el archivo no está en formato de Microsoft Word.</param>
        <param name="ReadOnly"><b>True</b> para abrir el documento como sólo lectura. Este argumento no anula el valor recomendado de sólo lectura de un documento guardado. Por ejemplo, si se ha guardado un documento con la opción recomendado sólo lectura activada, la configuración del <paramref name="ReadOnly" /> argumento en <b>false</b> no hará que el archivo se abra como de lectura y escritura.</param>
        <param name="AddToRecentFiles"><b>True</b> para agregar el nombre de archivo a la lista de archivos usados recientemente en la parte inferior del menú Archivo.</param>
        <param name="PasswordDocument">Contraseña para poder abrir el documento.</param>
        <param name="PasswordTemplate">Contraseña para poder abrir la plantilla.</param>
        <param name="Revert">Controla lo que ocurre si <paramref name="FileName" /> es el nombre de un documento abierto. <b>True</b> para descartar cualquier cambio no guardado del documento abierto y volver a abrir el archivo.  <b>False</b> para activar el documento abierto.</param>
        <param name="WritePasswordDocument">Contraseña para guardar los cambios del documento.</param>
        <param name="WritePasswordTemplate">Contraseña para guardar los cambios de la plantilla.</param>
        <param name="Format">Convertidor de archivos que se usará para abrir el documento. Puede ser una de las <see cref="T:Microsoft.Office.Interop.Word.WdOpenFormat" /> constantes. El valor predeterminado es <see cref="F:Microsoft.Office.Interop.Word.WdOpenFormat.wdOpenFormatAuto" />.</param>
        <param name="Encoding">Codificación de documentos (página de códigos o juego de caracteres) que debe usar Microsoft Word para mostrar el documento guardado. Puede ser cualquier <see cref="T:Microsoft.Office.Core.MsoEncoding" /> valor de enumeración válido. El valor predeterminado es la página de códigos del sistema.</param>
        <param name="Visible"><b>True</b> si el documento se abre en una ventana visible. El valor predeterminado es <b>True</b>.</param>
        <param name="OpenAndRepair"><b>True</b> para reparar el documento para evitar daños en los documentos.</param>
        <param name="DocumentDirection">Indica el flujo de texto horizontal en un documento. Puede ser cualquier <see cref="T:Microsoft.Office.Interop.Word.WdDocumentDirection" /> constante válida. El valor predeterminado es <see cref="F:Microsoft.Office.Interop.Word.WdDocumentDirection.wdLeftToRight" />.</param>
        <param name="NoEncodingDialog"><b>True</b> para no mostrar el cuadro de diálogo Codificación que abre Word cuando no reconoce el texto. El valor predeterminado es <b>False</b>.</param>
        <param name="XMLTransform">Especifica qué transformación usar.</param>
        <summary>Abre el documento especificado y lo agrega a la <see cref="T:Microsoft.Office.Interop.Word.Documents" /> colección.</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Word._Document" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document OpenOld (ref object FileName, ref object ConfirmConversions, ref object ReadOnly, ref object AddToRecentFiles, ref object PasswordDocument, ref object PasswordTemplate, ref object Revert, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Document OpenOld([in]object&amp; FileName, [in]object&amp; ConfirmConversions, [in]object&amp; ReadOnly, [in]object&amp; AddToRecentFiles, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; Revert, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.OpenOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenOld (ByRef FileName As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef ReadOnly As Object, Optional ByRef AddToRecentFiles As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef Revert As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef Format As Object) As Document" />
      <MemberSignature Language="F#" Value="abstract member OpenOld : obj * obj * obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.Document" Usage="documents.OpenOld (FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="ReadOnly" Type="System.Object" RefType="ref" />
        <Parameter Name="AddToRecentFiles" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Revert" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">To be added.</param>
        <param name="ConfirmConversions">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="AddToRecentFiles">To be added.</param>
        <param name="PasswordDocument">To be added.</param>
        <param name="PasswordTemplate">To be added.</param>
        <param name="Revert">To be added.</param>
        <param name="WritePasswordDocument">To be added.</param>
        <param name="WritePasswordTemplate">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>Reservado para uso interno.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Documents.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.Documents.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un objeto que representa el objeto primario del objeto especificado.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (ref object NoPrompt, ref object OriginalFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object&amp; NoPrompt, [in]object&amp; OriginalFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Documents.Save(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional ByRef NoPrompt As Object, Optional ByRef OriginalFormat As Object)" />
      <MemberSignature Language="F#" Value="abstract member Save : obj * obj -&gt; unit" Usage="documents.Save (NoPrompt, OriginalFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NoPrompt" Type="System.Object" RefType="ref" />
        <Parameter Name="OriginalFormat" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="NoPrompt"><b>Objeto</b>opcional. <b>True</b> para que Microsoft Word guarde automáticamente todos los documentos; <b>False</b> para que Word le pida al usuario que guarde todos los documentos que han cambiado desde la última vez que se guardaron.</param>
        <param name="OriginalFormat"><b>Objeto</b>opcional. Especifica la forma en que se guardan los documentos. Puede ser una de las <see cref="T:Microsoft.Office.Interop.Word.WdOriginalFormat" /> constantes.</param>
        <summary>Guarda todos los documentos de la <see cref="P:Microsoft.Office.Interop.Word._Application.Documents" /> colección.</summary>
        <remarks><para>Si un documento no se ha guardado antes, el cuadro de diálogo Guardar como solicita al usuario que indique un nombre de archivo.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
