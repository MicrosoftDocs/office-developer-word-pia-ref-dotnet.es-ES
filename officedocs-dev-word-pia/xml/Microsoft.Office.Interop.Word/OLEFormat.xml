<Type Name="OLEFormat" FullName="Microsoft.Office.Interop.Word.OLEFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67318725a843161eb77654b732cf7c9e63c73493" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20675168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface OLEFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.OLEFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020933-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4b957-101">Representa las características OLE, excepto las de vinculación, de un campo, control ActiveX u objeto OLE.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b957-101">Represents the OLE characteristics (other than linking) for an OLE object, ActiveX control, or field.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="4b957-102">
        <para>Utilice la propiedad <b>OLEFormat</b> para un <see cref="T:Microsoft.Office.Interop.Word.Shape" />, <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />, o <see cref="T:Microsoft.Office.Interop.Word.Field" /> objeto para devolver el objeto <b>OLEFormat</b> .</para>
        <para>No todos los tipos de formas, formas entre líneas y campos tienen capacidades OLE. Utilice la propiedad <b>Type</b> para los objetos <b>Shape</b> e <b>InlineShape</b> para determinar en qué categoría de la forma especificada o la forma entre líneas entre. La propiedad <b>Type</b> de un objeto <b>Field</b> devuelve el tipo de campo.</para>
        <para>Se puede usar el <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />, y <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> métodos para automatizar un objeto OLE.</para> Uso de 
      <para>la <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> propiedad para devolver un objeto object que representa un control ActiveX o un objeto OLE. Con este objeto, puede usar las propiedades y métodos de la aplicación contenedora o el control ActiveX.</para><para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="4b957-102">
          <para>Use the <b>OLEFormat</b> property for a <see cref="T:Microsoft.Office.Interop.Word.Shape" />, <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />, or <see cref="T:Microsoft.Office.Interop.Word.Field" /> object to return the <b>OLEFormat</b> object.</para>
          <para>Not all types of shapes, inline shapes, and fields have OLE capabilities. Use the <b>Type</b> property for the <b>Shape</b> and <b>InlineShape</b> objects to determine what category the specified shape or inline shape falls into. The <b>Type</b> property for a <b>Field</b> object returns the type of field.</para>
          <para>You can use the <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />, and <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> methods to automate an OLE object.</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> property to return an object that represents an ActiveX control or OLE object. With this object, you can use the properties and methods of the container application or the ActiveX control.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b957-103">Activa el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-103">Activates the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateAs">
      <MemberSignature Language="C#" Value="public void ActivateAs (string ClassType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateAs([in]string ClassType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ActivateAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateAs (ClassType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateAs(System::String ^ ClassType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ClassType">
          <span data-ttu-id="4b957-104">
            <b>String</b> requerida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-104">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4b957-105">El nombre de la aplicación en la que se abre un objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-105">The name of the application in which an OLE object is opened.</span>
          </span>
          <span data-ttu-id="4b957-106">Para ver una lista de tipos de objeto que se puede activar el objeto OLE como, haga clic en el objeto y, a continuación, abra el cuadro de diálogo Convertir (menú Edición, submenú objeto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-106">To see a list of object types that the OLE object can be activated as, click the object and then open the Convert dialog box (Edit menu, Object submenu).</span>
          </span>
          <span data-ttu-id="4b957-107">Puede encontrar el <paramref name="ClassType" /> cadena mediante la inserción de un objeto como una forma entre líneas y, a continuación, ver los códigos de campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-107">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span>
          </span>
          <span data-ttu-id="4b957-108">El tipo de clase del objeto sigue a la palabra "EMBED" o la palabra "Vínculo".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-108">The class type of the object follows either the word "EMBED" or the word "LINK."</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b957-109">Establece el valor de registro de Windows que determina la aplicación predeterminada que se utiliza para activar el objeto OLE especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-109">Sets the Windows registry value that determines the default application used to activate the specified OLE object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-110">Devuelve un <see cref="T:Microsoft.Office.Interop.Word.Application" /> object que representa la aplicación Microsoft Word.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-110">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public string ClassType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-111">Devuelve o establece el tipo de clase para el objeto OLE, imagen o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-111">Returns or sets the class type for the specified OLE object, picture, or field.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4b957-112">
            <para>Esta propiedad es de sólo lectura para objetos vinculados distintos vínculos DDE.</para>
            <para>Puede ver una lista de las aplicaciones disponibles en el cuadro Tipo de objeto en la ficha Crear nuevo en el cuadro de diálogo objeto (menú Insertar). Puede encontrar el <paramref name="ClassType" /> cadena mediante la inserción de un objeto como una forma entre líneas y, a continuación, ver los códigos de campo. El tipo de clase del objeto sigue a la palabra "EMBED" o la palabra "Vínculo".</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-112">
              <para>This property is read-only for linked objects other than DDE links.</para>
              <para>You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu). You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes. The class type of the object follows either the word "EMBED" or the word "LINK."</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public void ConvertTo (ref object ClassType, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertTo([in]object&amp; ClassType, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ConvertTo(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertTo (Optional ByRef ClassType As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType">
          <span data-ttu-id="4b957-113">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-113">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4b957-114">El nombre de la aplicación utilizada para activar el objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-114">The name of the application used to activate the OLE object.</span>
          </span>
          <span data-ttu-id="4b957-115">Puede ver una lista de las aplicaciones disponibles en el cuadro Tipo de objeto en la ficha Crear nuevo en el cuadro de diálogo objeto (menú Insertar).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-115">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span>
          </span>
          <span data-ttu-id="4b957-116">Puede encontrar el <paramref name="ClassType" /> cadena mediante la inserción de un objeto como una forma entre líneas y, a continuación, ver los códigos de campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-116">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span>
          </span>
          <span data-ttu-id="4b957-117">El tipo de clase del objeto sigue a la palabra "EMBED" o la palabra "Vínculo".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-117">The class type of the object follows either the word "EMBED" or the word "LINK."</span>
          </span>
        </param>
        <param name="DisplayAsIcon">
          <span data-ttu-id="4b957-118">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4b957-119">
            <b>True</b> para mostrar el objeto OLE como un icono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-119">
              <b>True</b> to display the OLE object as an icon.</span>
          </span>
          <span data-ttu-id="4b957-120">El valor predeterminado es <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-120">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="IconFileName">
          <span data-ttu-id="4b957-121">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-121">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4b957-122">Archivo que incluye el icono que va a mostrarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-122">The file that contains the icon to be displayed.</span>
          </span>
        </param>
        <param name="IconIndex">
          <span data-ttu-id="4b957-123">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-123">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4b957-124">El número de índice del icono dentro de <paramref name="IconFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-124">The index number of the icon within <paramref name="IconFileName" />.</span>
          </span>
          <span data-ttu-id="4b957-125">El orden de los iconos en el archivo especificado corresponde al orden en que los iconos aparecen en el cuadro de diálogo Cambiar icono (menú Insertar, cuadro de diálogo objeto) cuando se selecciona la casilla de verificación icono Mostrar como.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-125">The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (Insert menu, Object dialog box) when the Display as icon check box is selected.</span>
          </span>
          <span data-ttu-id="4b957-126">El primer icono en el archivo tiene el número de índice 0 (cero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-126">The first icon in the file has the index number 0 (zero).</span>
          </span>
          <span data-ttu-id="4b957-127">Si no existe ningún icono con el número de índice especificado en <paramref name="IconFileName" />, se utiliza el icono con el número de índice 1 (el segundo icono en el archivo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-127">If an icon with the given index number doesn't exist in <paramref name="IconFileName" />, the icon with the index number 1 (the second icon in the file) is used.</span>
          </span>
          <span data-ttu-id="4b957-128">El valor predeterminado es 0 (cero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-128">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="IconLabel">
          <span data-ttu-id="4b957-129">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4b957-130">Etiqueta o título que se mostrará debajo del icono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-130">A label (caption) to be displayed beneath the icon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b957-131">Convierte el objeto OLE especificado de una clase a otra, lo que permite editar el objeto en una aplicación de servidor diferente o cambiar cómo se muestra el objeto en el documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-131">Converts the specified OLE object from one class to another, making it possible for you to edit the object in a different server application, or change how the object is displayed in the document.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-132">Devuelve un entero de 32 bits que indica la aplicación en la que se creó el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-132">Returns a 32-bit integer that indicates the application in which the specified object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4b957-133">
            <para>Si el objeto se creó en Microsoft Word, esta propiedad devuelve el número hexadecimal 4D535744, que representa la cadena "MSWD". Este valor también puede representarse mediante la constante <b>wdCreatorCode</b>.</para> Propiedad 
          <para>el <b>creador</b> principalmente se diseñó para usarse en Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Word tiene el código de creador MSWD. Para obtener información adicional acerca de esta propiedad, vea la referencia del lenguaje ayuda que se incluye con Microsoft Office Macintosh Edition.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-133">
              <para>If the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD." This value can also be represented by the constant <b>wdCreatorCode</b>.</para>
              <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAsIcon">
      <MemberSignature Language="C#" Value="public bool DisplayAsIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAsIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAsIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAsIcon { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-134">
            <b>True</b> si el objeto especificado se muestra como un icono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-134">
              <b>True</b> if the specified object is displayed as an icon.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoVerb">
      <MemberSignature Language="C#" Value="public void DoVerb (ref object VerbIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoVerb([in]object&amp; VerbIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoVerb (Optional ByRef VerbIndex As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VerbIndex" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="VerbIndex">
          <span data-ttu-id="4b957-135">
            <b>Objeto</b>de opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-135">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4b957-136">El verbo que debe realizar el objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-136">The verb that the OLE object should perform.</span>
          </span>
          <span data-ttu-id="4b957-137">Si se omite este argumento, se envía el verbo predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-137">If this argument is omitted, the default verb is sent.</span>
          </span>
          <span data-ttu-id="4b957-138">Si el objeto OLE no admite el verbo solicitado, se producirá un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-138">If the OLE object does not support the requested verb, an error will occur.</span>
          </span>
          <span data-ttu-id="4b957-139">Puede ser cualquier <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-139">Can be any <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constant.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b957-140">Solicita que un objeto OLE ejecute uno de sus verbos disponibles, las acciones que realiza un objeto OLE para activar su contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-140">Requests that an OLE object perform one of its available verbs— the actions an OLE object takes to activate its contents.</span>
          </span>
          <span data-ttu-id="4b957-141">Cada objeto OLE contiene un conjunto de verbos correspondientes al objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-141">Each OLE object supports a set of verbs that pertain to that object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public void Edit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Edit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Edit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Edit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b957-142">Abre el objeto OLE especificado para la edición en la aplicación en la cual fue creado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-142">Opens the specified OLE object for editing in the application it was created in.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconIndex">
      <MemberSignature Language="C#" Value="public int IconIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-143">Devuelve o establece el icono que se utiliza cuando la <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> propiedad es <b>True</b>: 0 (cero) corresponde al primer icono, 1 corresponde al segundo icono y así sucesivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-143">Returns or sets the icon that's used when the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> property is <b>True</b>: 0 (zero) corresponds to the first icon, 1 corresponds to the second icon, and so on.</span>
          </span>
          <span data-ttu-id="4b957-144">Si se omite este argumento, se usa el primer icono (predeterminado).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-144">If this argument is omitted, the first (default) icon is used.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconLabel">
      <MemberSignature Language="C#" Value="public string IconLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property IconLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-145">Devuelve o establece el texto que aparece debajo del icono para un objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-145">Returns or sets the text displayed below the icon for an OLE object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconName">
      <MemberSignature Language="C#" Value="public string IconName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberSignature Language="VB.NET" Value="Public Property IconName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-146">Devuelve o establece el archivo de programa en el que está almacenado el icono para un objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-146">Returns or sets the program file in which the icon for an OLE object is stored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconPath">
      <MemberSignature Language="C#" Value="public string IconPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-147">Devuelve la ruta de acceso del archivo en el que está almacenado el icono para un objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-147">Returns the path of the file in which the icon for an OLE object is stored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-148">Devuelve una cadena que se usa para identificar la parte del archivo de origen que se vincula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-148">Returns a string that's used to identify the portion of the source file that's being linked.</span>
          </span>
          <span data-ttu-id="4b957-149">Por ejemplo, si el archivo de origen es un libro de Microsoft Excel, la propiedad <b>Label</b> puede devolver "Workbook1! F3C1: F4C2 "si el objeto OLE sólo contiene algunas celdas desde la hoja de cálculo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-149">For example, if the source file is a Microsoft Excel workbook, the <b>Label</b> property might return "Workbook1!R3C1:R4C2" if the OLE object contains only a few cells from the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4b957-150">
            <para>Esta propiedad sólo funciona para las formas, formas entre líneas o campos que sean objetos OLE vinculados.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-150">
              <para>This property works only for shapes, inline shapes, or fields that are linked OLE objects.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-151">Devuelve un <b>objeto</b> Object que representa la interfaz de nivel superior del objeto OLE especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-151">Returns an <b>Object</b> that represents the specified OLE object's top-level interface.</span>
          </span>
          <span data-ttu-id="4b957-152">Esta propiedad permite obtener acceso a las propiedades y métodos de un control ActiveX o la aplicación en la que se creó un objeto OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-152">This property allows you to access the properties and methods of an ActiveX control or the application in which an OLE object was created.</span>
          </span>
          <span data-ttu-id="4b957-153">Para que funcione esta propiedad, el objeto OLE debe ser compatible con la automatización OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-153">The OLE object must support OLE Automation for this property to work.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b957-154">Abre el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-154">Opens the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-155">Devuelve un objeto que representa el objeto primario del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-155">Returns an object that represents the parent object of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormattingOnUpdate">
      <MemberSignature Language="C#" Value="public bool PreserveFormattingOnUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormattingOnUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormattingOnUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormattingOnUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-156">
            <b>True</b> conserva el formato aplicado en Microsoft Word a un objeto OLE vinculado como, por ejemplo, una tabla vinculada a una hoja de cálculo de Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-156">
              <b>True</b> preserves formatting done in Microsoft Word to a linked OLE object, such as a table linked to a Microsoft Excel spreadsheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4b957-157">
            <para>Cuando <b>PreserveFormattingOnUpdate</b> está establecida en <b>True</b>, los cambios de formato realizados al objeto en Word se conservan cuando se actualiza el objeto. Word actualiza sólo el contenido en el objeto vinculado.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-157">
              <para>When <b>PreserveFormattingOnUpdate</b> is set to <b>True</b>, formatting changes made to the object in Word is preserved when the object is updated. Word updates only the content in the linked object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgID">
      <MemberSignature Language="C#" Value="public string ProgID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b957-158">Devuelve el identificador de programación (ProgID) del objeto OLE especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-158">Returns the programmatic identifier (ProgID) for the specified OLE object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="4b957-159">
            <para>El <b>ProgID</b> y <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> propiedades (de forma predeterminada) devolverá la misma cadena. Sin embargo, puede cambiar la propiedad <b>ClassType</b> para vínculos DDE.</para> Intercambio de 
          <para><b>seguridad</b> dinámico de datos (DDE) es una tecnología antigua que no es segura. Si es posible, utilice una alternativa más segura a la DDE.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b957-159">
              <para>The <b>ProgID</b> and <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> properties will (by default) return the same string. However, you can change the <b>ClassType</b> property for DDE links.</para>
              <para>
                <b>Security</b>  Dynamic data exchange (DDE) is an older technology that is not secure. If possible, use a more secure alternative to DDE.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>